Prepare package
	.UseKestrel(op => op.ListenAnyIP(5000));
	https://docs.microsoft.com/en-us/dotnet/core/deploying/deploy-with-cli#self-contained-deployment	
	dotnet publish -c Release -r linux-x64 --self-contained true

Ec2
	Login
	Region
	Availability Zones
	AMI (Amazon Machine Image)
	EC2 -> Instance Types -> Launch Instance
	Instance Types
	Security Group: TCP 5000
	say about VPC

Access	
	chmod 400 .ssh/test.pem
	ls -la test-students.pem
	sudo ssh -i .ssh/test.pem ubuntu@<public DNS>		
	
deploy
	 sudo scp -r -i /mnt/c/Users/<username>/.ssh/test-ec2.pem publish ubuntu@<host>:/home/ubuntu/app
	
Build
	dotnet publish -c Release
	
install dotnet runtime
	https://www.microsoft.com/net/download/linux-package-manager/ubuntu18-04/runtime-2.0.8
	wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
	sudo dpkg -i packages-microsoft-prod.deb
	sudo apt-get install apt-transport-https
	sudo apt-get update
	sudo apt-get install aspnetcore-runtime-2.1
	
deploy
	 sudo scp -r -i /mnt/c/Users/<username>/.ssh/test-ec2.pem publish ubuntu@<host>:/home/ubuntu/app

Lambda
	Create Lambda from Scaffolding
	USE OBJECTS INSTEAD OF STRING
	Pay attention to tests
	Run locally
	Publish
	SHOW IN WEB CONSOLE
	
API Gateway
	create method (GET)
	Deploy API	
	create method (POST)
	go to postman
	SHOW MONITORING IN WEB CONSOLE
	
 https://h8rf7j2i24.execute-api.eu-central-1.amazonaws.com/prod/values
 
Access from Lambda to EC2

Access from Lambda to RDS or S3